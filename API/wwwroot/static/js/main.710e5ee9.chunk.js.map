{"version":3,"sources":["app/models/pagination.ts","app/api/agents.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commomStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/navBar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponents.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivitiyDetailedHeader.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSideBar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilesPhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/common/util/hooks.ts","features/RegisterSuccess.tsx","features/users/ConfirmEmail.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modelDateErrors","key","flat","startsWith","userStore","logout","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","fbLogin","accessToken","refreshToken","verifyEmail","email","resendEmailConfirm","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","runInAction","setActivity","setPagination","setLoadingInitial","console","log","loadActivity","getActivity","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","setDisplayName","activityStore","loadFollowings","UserStore","fbAccessToken","fbLoading","refreshTokenTimeout","creds","setToken","startRefreshTokenTimer","modalStore","closeModal","window","localStorage","removeItem","getUser","name","getFacebookLoginStatus","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","catch","scope","stopRefreshTokenTimer","jwtToken","atob","split","timeout","exp","now","setTimeout","clearTimeout","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","storeContext","createContext","useStore","useContext","observer","isLoggedIn","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","collor","active","has","onChange","Reveal","animated","Content","visible","fluid","color","hidden","basic","e","preventDefault","handleFollow","Card","Description","str","length","substring","truncate","bio","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","ActivityListItem","Segment","Group","Label","textAlign","marginBottom","secondary","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInpun","props","useField","field","meta","Form","Field","touched","label","initialValues","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationError","Message","err","i","validationSchema","Yup","required","isValid","dirty","Divider","LoadingComponent","Dimmer","MyTextArea","MySelectInpun","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInpun","selected","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","verticalAlign","relaxed","divided","Extra","ActivityDetailedSideBar","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","setEditMode","isCurrentUser","Tab","Pane","itemsPerRow","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","panes","menuItem","ProfilesPhotos","menu","menuPosition","onTabChange","activeIndex","Statistic","followingCount","PrivateRoute","Component","component","rest","useQuery","useLocation","search","RegisterSuccess","success","ConfirmEmail","Status","setStatus","handleConfirmEmailResend","getBody","location","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.710e5ee9.chunk.js","sourcesContent":["export interface Pagination{\r\n    currentPage: number;\r\n    itensPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T>{\r\n    data: T;\r\n    pagination: Pagination;\r\n\r\n    constructor( data: T, pagination: Pagination){\r\n        this.data = data;\r\n        this.pagination = pagination;\r\n    }\r\n}\r\n\r\nexport class PagingParams{\r\n    pageNumber;\r\n    pageSize; \r\n\r\n    constructor(pageNumber = 1, pageSize = 2,) {\r\n        this.pageNumber = pageNumber;\r\n        this.pageSize = pageSize;\r\n    }\r\n}","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { PaginatedResult } from \"../models/pagination\";\r\nimport { Photo, Profile } from \"../models/profile\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"../stores/store\";\r\n\r\nconst sleep = (delay: number) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay)\r\n    })\r\n}\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use(config => {\r\n    const token = store.commonStore.token;\r\n    if (token) config.headers.Authorization = `Bearer ${token}`\r\n        return config;\r\n})\r\n\r\naxios.interceptors.response.use(async response => {\r\n    if (process.env.NODE_ENV === 'development') {\r\n        await sleep(1000);\r\n    }\r\n    const pagination = response.headers['pagination'];\r\n    if (pagination) {\r\n        response.data = new PaginatedResult(response.data, JSON.parse(pagination));\r\n        return response as AxiosResponse<PaginatedResult<any>>;\r\n    }\r\n    return response;\r\n}, (error: AxiosError) => {\r\n    const { data, status, config, headers } = error.response!;\r\n    switch (status) {\r\n        case 400:\r\n            if (typeof data === \"string\") {\r\n                toast.error(data);\r\n            }\r\n            if (config.method ==='get' && data.errors.hasOwnProperty('id')) {\r\n                history.push('/not-found');\r\n            }\r\n            if (data.errors) {\r\n                const modelDateErrors = [];\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modelDateErrors.push(data.errors[key]);\r\n                    }\r\n                }\r\n                throw modelDateErrors.flat()\r\n            }\r\n            break;\r\n        case 401:\r\n            if (status === 401 && headers['www-authenticate']?.startsWith('Bearer error=\"invalid_token\"') ){\r\n                store.userStore.logout();\r\n                toast.error('Session expired - please login again');\r\n            }\r\n            break;\r\n        case 404:\r\n            history.push('/not-found');\r\n            break;\r\n        case 500:\r\n           store.commonStore.setServerError(data);\r\n           history.push('/server-error');\r\n            break;\r\n    }\r\n    return Promise.reject(error);\r\n})\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n    get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n    post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\r\n    put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n    del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n}\r\n\r\nconst Activities = {\r\n    list: (params: URLSearchParams) => axios.get<PaginatedResult<Activity[]>>('/activities', {params}).then(responseBody),\r\n    details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n    create: (activity: ActivityFormValues) => requests.post<void>('/activities', activity),\r\n    update: (activity: ActivityFormValues) => requests.put<void>(`/activities/${activity.id}`, activity),\r\n    delete: (id: string) => requests.del<void>(`/activities/${id}`),\r\n    attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {})\r\n}\r\n\r\nconst Account ={\r\n    current: () => requests.get<User>('/account'),\r\n    login: (user: UserFormValues) => requests.post<User>('/account/login', user),\r\n    register: (user: UserFormValues) => requests.post<User>('/account/register', user),\r\n    fbLogin: (accessToken: string) => requests.post<User>(`/account/fbLogin?accessToken=${accessToken}`, {}),\r\n    refreshToken: () => requests.post<User>('/account/refreshToken', {}),\r\n    verifyEmail: (token: string, email: string) => requests.post<void>(`/account/verifyEmail?token=${token}&email=${email}`, {}),\r\n    resendEmailConfirm: (email: string) => requests.get(`/account/resendEmailConfirmationLink?email=${email}`)\r\n}\r\n\r\nconst Profiles = {\r\n    get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n    uploadPhoto: (file : Blob) => {\r\n        let formData = new FormData()\r\n        formData.append('File', file)\r\n        return axios.post<Photo>('photos', formData,{\r\n            headers: {'Content-type': 'multipart/form-data'}\r\n        } )\r\n    },\r\n\r\nsetMainPhoto:(id: string) => requests.post(`/photos/${id}/setMain`,{}),\r\ndeletePhoto:(id: string) => requests.del(`/photos/${id}`),\r\nupdateProfile:(profile: Partial<Profile>) => requests.put(`/profiles`, profile),\r\nupdateFollowing: (username: string) => requests.post(`/follow/${username}`, {}),\r\nlistFollowings: (username: string, predicate: string) => requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`)\r\n}\r\n\r\nconst agent = {\r\n    Activities,\r\n    Account,\r\n    Profiles\r\n}\r\nexport default agent;","import { Profile } from \"./profile\";\r\n\r\nexport interface Activity {\r\n    id: string;\r\n    title: string;\r\n    date: Date | null;\r\n    description: string;\r\n    category: string;\r\n    city: string;\r\n    venue: string;\r\n    hostUsername: string;\r\n    isCancelled: boolean;\r\n    isGoing: boolean;\r\n    isHost: boolean;\r\n    host?: Profile;\r\n    attendees: Profile[];\r\n}\r\nexport class Activity implements Activity{\r\n    constructor(init? : ActivityFormValues){\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport class ActivityFormValues{\r\n    id?: string = undefined;\r\n    title: string = '';\r\n    category: string = '';\r\n    description: string = '';\r\n    date: Date | null = null;\r\n    city: string = '';\r\n    venue: string = '';\r\n\r\n    constructor(activity?: ActivityFormValues){\r\n        if (activity) {\r\n            this.id = activity.id;\r\n            this.title = activity.title;\r\n            this.category = activity.category;\r\n            this.description = activity.description;\r\n            this.date = activity.date;\r\n            this.venue = activity.venue;\r\n            this.city = activity.city;\r\n        }\r\n    }\r\n}\r\n","import { User } from \"./user\";\r\n\r\nexport interface Profile {\r\n    username: string;\r\n    displayName: string;\r\n    image?: string;\r\n    bio?: string;\r\n    followersCount: number;\r\n    followingCount: number;\r\n    following: boolean;\r\n    photos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile{\r\n    constructor(user: User){\r\n        this.username = user.username;\r\n        this.displayName = user.displayName;\r\n        this.image = user.image;\r\n    }\r\n}\r\n\r\nexport interface Photo{\r\n    id: string;\r\n    url: string;\r\n    isMain: boolean;\r\n}","import { format } from \"date-fns\";\r\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agents\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { Pagination, PagingParams } from \"../models/pagination\";\r\nimport { Profile } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\n\r\nexport default class ActivityStore {\r\n    activityRegistry = new Map<string, Activity>();\r\n    selectedActivity: Activity | undefined = undefined;\r\n    editMode = false;\r\n    loading = false;\r\n    loadingInitial = false;\r\n    pagination: Pagination | null = null;\r\n    pagingParams = new PagingParams();\r\n    predicate = new Map().set('all', true);\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.predicate.keys(),\r\n            () => {\r\n                this.pagingParams = new PagingParams();\r\n                this.activityRegistry.clear();\r\n                this.loadActivities();\r\n            }\r\n        )\r\n    }\r\n\r\n    setPagingParams =(pagingParams: PagingParams) => {\r\n        this.pagingParams = pagingParams;\r\n    }\r\n\r\n    setPredicate = (predicate: string, value: string | Date) => {\r\n        const resetPredicate = () => {\r\n            this.predicate.forEach((value, key) =>{\r\n               if (key !== 'startDate') {\r\n                   this.predicate.delete(key);\r\n               }\r\n            })\r\n        }\r\n        switch(predicate){\r\n            case 'all' :\r\n                resetPredicate();\r\n                this.predicate.set('all', true);\r\n                break;\r\n            case 'isGoing':\r\n                resetPredicate();\r\n                this.predicate.set('isGoing', true)\r\n                break;\r\n            case 'isHost':\r\n                resetPredicate();\r\n                this.predicate.set('isHost', true)\r\n                break;\r\n            case 'startDate':\r\n                this.predicate.delete('startDate');\r\n                this.predicate.set('startDate', value);\r\n        }\r\n    }\r\n    get axiosParams () {\r\n        const params = new URLSearchParams();\r\n        params.append('pageNumber', this.pagingParams.pageNumber.toString());\r\n        params.append('pageSize', this.pagingParams.pageSize.toString())\r\n        this.predicate.forEach((value, key) => {\r\n            if (key === 'startDate') {\r\n                params.append(key, (value as Date).toISOString());\r\n            }else{\r\n                params.append(key, value);\r\n            }\r\n        })\r\n        return params;\r\n    }\r\n\r\n    get activitiesByDate() {\r\n        return Array.from(this.activityRegistry.values()).sort((a, b) =>\r\n        a.date!.getTime() - b.date!.getTime());\r\n    }\r\n\r\n    get groupedActivities() {\r\n        return Object.entries(\r\n            this.activitiesByDate.reduce((activities, activity) => {\r\n                const date = format (activity.date!, 'dd MMMM yyyy');\r\n                activities[date] = activities[date] ? [...activities[date], activity] : [activity];\r\n                return activities;\r\n            }, {} as { [key: string]: Activity[] })\r\n        )\r\n    }\r\n    loadActivities = async () => {\r\n        this.loadingInitial = true;\r\n        try {\r\n            const result = await agent.Activities.list(this.axiosParams);\r\n            result.data.forEach(activity => {\r\n                runInAction(() => {\r\n                    this.setActivity(activity);\r\n                });\r\n            })\r\n            this.setPagination(result.pagination);\r\n            this.setLoadingInitial(false);\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.setLoadingInitial(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    setPagination = (pagination: Pagination) => {\r\n        this.pagination = pagination;\r\n    }\r\n\r\n    loadActivity = async (id: string) => {\r\n        let activity = this.getActivity(id);\r\n        if (activity) {\r\n            this.selectedActivity = activity;\r\n            return activity;\r\n        }\r\n        else {\r\n            this.loadingInitial = true;\r\n            try {\r\n                activity = await agent.Activities.details(id);\r\n                this.setActivity(activity);\r\n                runInAction(() => {\r\n                    this.selectedActivity = activity;\r\n                })\r\n                this.setLoadingInitial(false);\r\n                return activity;\r\n            } catch (error) {\r\n                console.log(error);\r\n                runInAction(() => {\r\n                    this.setLoadingInitial(false);\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    private setActivity = (activity: Activity) => {\r\n        const user = store.userStore.user;\r\n        if (user) {\r\n            activity.isGoing = activity.attendees!.some(a => a.username === user.username);\r\n            activity.isHost = activity.hostUsername === user.username;\r\n            activity.host = activity.attendees?.find(x => x.username === activity.hostUsername);\r\n        }\r\n        activity.date = new Date(activity.date!);\r\n        this.activityRegistry.set(activity.id, activity);\r\n    }\r\n\r\n    private getActivity = (id: string) => {\r\n        return this.activityRegistry.get(id);\r\n    }\r\n\r\n    setLoadingInitial = (state: boolean) => {\r\n        this.loadingInitial = state;\r\n    }\r\n    \r\n    createActivity = async (activity: ActivityFormValues) => {\r\n        const user = store.userStore.user;\r\n        const attendee = new Profile(user!)\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.create(activity);\r\n            const newActivity = new Activity(activity);\r\n            newActivity.hostUsername = user!.username;\r\n            newActivity.attendees =  [attendee];\r\n            this.setActivity(newActivity);\r\n\r\n            runInAction(() => {\r\n                this.selectedActivity = newActivity;\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    updateActivity = async (activity: ActivityFormValues) => {\r\n        try {\r\n            await agent.Activities.update(activity);\r\n            runInAction(() => {\r\n                if (activity.id) {\r\n                   let updatedActivity = {...this.getActivity(activity.id), ...activity }\r\n                   this.activityRegistry.set(activity.id, updatedActivity as Activity);\r\n                   this.selectedActivity = updatedActivity as Activity;\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    deleteActivity = async (id: string) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.delete(id);\r\n            runInAction(() => {\r\n                this.activityRegistry.delete(id);\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.loading = false;\r\n            })\r\n        }\r\n    }\r\n\r\n    updateAttendance = async () => {\r\n        const user = store.userStore.user;\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            runInAction(() => {\r\n            if(this.selectedActivity?.isGoing) {\r\n                this.selectedActivity.attendees =\r\n                    this.selectedActivity.attendees?.filter(a => a.username !== user?.username);\r\n                this.selectedActivity.isGoing = false;\r\n            }\r\n            else{\r\n                const attendee = new Profile(user!);\r\n                this.selectedActivity?.attendees?.push(attendee);\r\n                this.selectedActivity!.isGoing = true;\r\n            }\r\n            this.activityRegistry.set(this.selectedActivity!.id , this.selectedActivity! )\r\n        })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }finally{\r\n            runInAction(() => this.loading = false);\r\n        }\r\n\r\n    }\r\n    cancelActivityToggle= async () => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            runInAction(() => {\r\n                this.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled;\r\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n            })\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        } finally{\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n    clearSelectedActivity = () => {\r\n        this.selectedActivity = undefined;\r\n    }\r\n    updateAttendeeFollowing = (username: string) => {\r\n        this.activityRegistry.forEach(activity =>{\r\n            activity.attendees.forEach(attendee =>{\r\n                if (attendee.username === username) {\r\n                    attendee.following ? attendee.followersCount-- : attendee.followersCount++;\r\n                    attendee.following = !attendee.following;\r\n                }\r\n            })\r\n        })\r\n    }\r\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agents\";\r\nimport { Photo, Profile } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore{\r\n    profile: Profile | null = null;\r\n    loadingProfile = false;\r\n    uploading = false;\r\n    loading = false;\r\n    followings: Profile[] = [];\r\n    loadingFollowings = false;\r\n    activeTab = 0;\r\n    \r\n    constructor() {\r\n       makeAutoObservable(this);\r\n\r\n       reaction(\r\n           () => this.activeTab, \r\n           activeTab => {\r\n               if (activeTab === 3 || activeTab === 4 ) {\r\n                   const predicate = activeTab === 3 ? 'followers' : 'followings';\r\n                   this.loadFollowings(predicate);\r\n               } else{\r\n                   this.followings = [];\r\n               }\r\n           }\r\n       )\r\n    }\r\n\r\n    setActiveTab = (activeTab: any) => {\r\n        this.activeTab = activeTab;\r\n    }\r\n\r\n    get isCurrentUser(){\r\n        if (store.userStore.user && this.profile) {\r\n            return store.userStore.user.username === this.profile.username;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    loadProfile = async (username : string) => {\r\n        this.loadingProfile = true;\r\n\r\n        try {\r\n            const profile = await agent.Profiles.get(username);\r\n            runInAction(() => {\r\n                this.profile = profile;\r\n                this.loadingProfile = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            runInAction(() => this.loadingProfile = false);\r\n        }\r\n    }\r\n\r\n    uploadPhoto = async (file: Blob) => {\r\n        this.uploading = true;\r\n        try {\r\n                const response = await agent.Profiles.uploadPhoto(file);\r\n                const photo = response.data;\r\n                runInAction(() => {\r\n                    if (this.profile) {\r\n                        this.profile.photos?.push(photo);\r\n                        if (photo.isMain && store.userStore.user) {\r\n                            store.userStore.setImage(photo.url);\r\n                            this.profile.image = photo.url;\r\n                        }\r\n                    }\r\n                })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.uploading = false);\r\n        }\r\n        this.uploading = false;\r\n    }\r\n\r\n    setMainPhoto = async (photo: Photo) => {\r\n        this.loading = true;\r\n        try {\r\n            agent.Profiles.setMainPhoto(photo.id);\r\n            store.userStore.setImage(photo.url);\r\n            runInAction(() => {\r\n                if (this.profile && this.profile.photos) {\r\n                    this.profile.photos.find(p => p.isMain)!.isMain = false\r\n                    this.profile.photos.find(p => p.id === photo.id)!.isMain = true;\r\n                    this.profile.image = photo.url;\r\n                    this.loading = false;\r\n                }\r\n            })\r\n        } catch (error) {\r\n            runInAction(() => this.loading = false)\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    deletePhoto = async (photo: Photo) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.deletePhoto(photo.id);\r\n            runInAction(() => {\r\n                if (this.profile) {\r\n                    this.profile.photos = this.profile.photos?.filter(p => p.id !== photo.id);\r\n                    this.loading = false;\r\n                }\r\n            })\r\n        } catch (error) {\r\n            runInAction(() => this.loading = false)\r\n            console.log(error)\r\n        }\r\n    }\r\n    updateProfile = async (profile: Partial<Profile>) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.updateProfile(profile);\r\n            runInAction(() => {\r\n                if (profile.displayName && profile.displayName !== store.userStore.user?.displayName) {\r\n                    store.userStore.setDisplayName(profile.displayName);\r\n                }\r\n                this.profile = {...this.profile, ...profile as Profile};\r\n                this.loading = false;\r\n            })\r\n        }\r\n        catch (error) {\r\n                console.log(error)\r\n                runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n    updateFollowing = async (username: string, following: boolean) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.updateFollowing(username);\r\n            store.activityStore.updateAttendeeFollowing(username);\r\n            runInAction(() => {\r\n                if (this.profile && this.profile.username === store.userStore.user?.username) {\r\n                    following ? this.profile.followersCount++ : this.profile.followersCount--;\r\n                    this.profile.following = !this.profile.following;\r\n                }\r\n                this.followings.forEach(profile => {\r\n                    if (profile.username === username) {\r\n                        profile.following ? profile.followersCount-- : profile.followersCount++;\r\n                        profile.following = !profile.following; \r\n                    }\r\n                })\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    loadFollowings = async (predicate: string) => {\r\n        this.loadingFollowings = true;\r\n        try {\r\n            const followings =  await agent.Profiles.listFollowings(this.profile!.username, predicate);\r\n            runInAction(() => {\r\n                this.followings = followings;\r\n                this.loadingFollowings = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            runInAction(()  => {\r\n                this.loadingFollowings = false;\r\n            })\r\n        }\r\n    }\r\n}\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport agent from \"../api/agents\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"./store\";\r\nimport { history } from \"../..\";\r\n\r\nexport default class UserStore{\r\n    user: User | null = null;\r\n    fbAccessToken: string | null = null;\r\n    fbLoading = false;\r\n    refreshTokenTimeout: any;\r\n\r\n    constructor(){\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    get isLoggedIn(){\r\n        // console.log(\"user is already logged in\")\r\n        return !!this.user;\r\n    }\r\n    \r\n    login = async (creds: UserFormValues) => {\r\n        try {\r\n            const user = await agent.Account.login(creds);\r\n            store.commonStore.setToken(user.token);\r\n            this.startRefreshTokenTimer(user);\r\n            runInAction(() => this.user = user);\r\n            history.push('/activities')\r\n            store.modalStore.closeModal();\r\n            console.log(user);\r\n        } catch (error) {\r\n            console.log('Error occurred while trying to login ' + error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        store.commonStore.setToken(null);\r\n        window.localStorage.removeItem('jwt');\r\n        this.user = null;\r\n        history.push('/');\r\n    }\r\n\r\n    getUser = async () => {\r\n        try{\r\n        const user = await agent.Account.current();\r\n        runInAction(() => this.user = user);\r\n        this.startRefreshTokenTimer(user);\r\n        } catch(error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    register = async (creds: UserFormValues) => {\r\n        try {\r\n            await agent.Account.register(creds);\r\n            history.push(`/account/registerSuccess?email=${creds.email}`)\r\n            store.modalStore.closeModal();\r\n        }catch (error) {\r\n            console.log('Error occurred while trying to register ' + error);;\r\n            throw error;\r\n        }\r\n    }\r\n    setImage = (image: string) => {\r\n        if (this.user) {\r\n            this.user.image = image;\r\n        }\r\n    }\r\n\r\n    setDisplayName = (name: string) => {\r\n        if (this.user) {\r\n            this.user.displayName = name;\r\n        }\r\n    }\r\n\r\n    getFacebookLoginStatus = async () => {\r\n        window.FB.getLoginStatus(response => {\r\n            if (response.status === 'connected') {\r\n                this.fbAccessToken = response.authResponse.accessToken;\r\n            }\r\n        })\r\n    }\r\n\r\n    facebookLogin = () => {\r\n        this.fbLoading = true;\r\n        const apiLogin = (accessToken: string) => {\r\n            agent.Account.fbLogin(accessToken).then(user => {\r\n                store.commonStore.setToken(user.token);\r\n                this.startRefreshTokenTimer(user);\r\n                runInAction(() => {\r\n                    this.user = user;\r\n                    this.fbLoading = false;\r\n                })\r\n                history.push('/activities');\r\n            }).catch(error => {\r\n                console.log(error);\r\n                runInAction(() => this.fbLoading = false);\r\n            })\r\n        }\r\n\r\n        if (this.fbAccessToken) {\r\n            apiLogin(this.fbAccessToken);\r\n        }else{\r\n            window.FB.login(response => {\r\n                apiLogin(response.authResponse.accessToken);\r\n            }, {scope: 'public_profile, email'})\r\n        }\r\n    }\r\n\r\n    refreshToken = async () => {\r\n        this.stopRefreshTokenTimer();\r\n        try {\r\n            const user = await agent.Account.refreshToken();\r\n            runInAction(() => this.user = user);\r\n            store.commonStore.setToken(user.token);\r\n            this.startRefreshTokenTimer(user);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    } \r\n\r\n    private startRefreshTokenTimer(user: User){\r\n        const jwtToken = JSON.parse(atob(user.token.split('.')[1]));\r\n        const expires = new Date(jwtToken.exp * 1000);\r\n        const timeout = expires.getTime() - Date.now() - (60 * 1000);\r\n        this.refreshTokenTimeout = setTimeout(this.refreshToken, timeout);\r\n    }\r\n\r\n    private stopRefreshTokenTimer() {\r\n        clearTimeout(this.refreshTokenTimeout);\r\n    }\r\n\r\n\r\n}","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommentStore from \"./commentStore\";\r\nimport CommonStore from \"./commomStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store {\r\n    activityStore:ActivityStore;\r\n    commonStore: CommonStore;\r\n    userStore: UserStore;\r\n    modalStore: ModalStore;\r\n    profileStore: ProfileStore;\r\n    commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n    activityStore: new ActivityStore(),\r\n    commonStore: new CommonStore(),\r\n    userStore: new UserStore(),\r\n    modalStore: new ModalStore(),\r\n    profileStore: new ProfileStore(),\r\n    commentStore: new CommentStore()\r\n}\r\n\r\nexport const storeContext = createContext(store);\r\n\r\nexport function useStore() {\r\n    return useContext(storeContext);\r\n}","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore{\r\n    error: ServerError | null = null;\r\n    token: string | null = window.localStorage.getItem('jwt');\r\n    appLoaded = false;\r\n\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n        reaction(\r\n            () => this.token,\r\n            token => {\r\n                if (token) {\r\n                    window.localStorage.setItem('jwt', token)\r\n                }else{\r\n                    window.localStorage.removeItem('jwt')\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    setServerError = (error: ServerError) => {\r\n        this.error = error;\r\n    }\r\n\r\n    setToken = (token: string | null) => {this.token = token;}\r\n\r\n    setAppLoaded = () => {\r\n        this.appLoaded = true;\r\n    }\r\n}","import { makeAutoObservable } from \"mobx\";\r\n\r\ninterface Modal{\r\n    open: boolean,\r\n    body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore{\r\n    modal: Modal ={\r\n        open: false,\r\n        body: null\r\n\r\n    }\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    openModal = (content: JSX.Element) => {\r\n        this.modal.open = true;\r\n        this.modal.body = content;\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.modal.open = false;\r\n        this.modal.body = null;\r\n    }\r\n}","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction} from \"mobx\";\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore{\r\n    comments: ChatComment[] = [];\r\n    hubConnection : HubConnection | null = null;\r\n\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    createHubConnection = (activityId: string) => {\r\n        if (store.activityStore.selectedActivity) {\r\n            this.hubConnection = new HubConnectionBuilder()\r\n            .withUrl(process.env.REACT_APP_CHAT_URL +'?activityId=' + activityId, {\r\n                accessTokenFactory: () => store.userStore.user?.token!\r\n            })\r\n            .withAutomaticReconnect()\r\n            .configureLogging(LogLevel.Information)\r\n            .build();\r\n\r\n            this.hubConnection.start().catch(error => console.log('Error establishing connection', error));\r\n            this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\r\n                runInAction(() => {\r\n                    comments.forEach(comment => {\r\n                       comment.createdAt = new Date(comment.createdAt + 'Z');\r\n                    })\r\n                    this.comments = comments\r\n                });\r\n            })\r\n            this.hubConnection.on('ReceiveComment', (comment: ChatComment) =>{\r\n                runInAction(() => {\r\n                    comment.createdAt = new Date(comment.createdAt);\r\n                    this.comments.unshift(comment)\r\n                });\r\n            })\r\n        }\r\n    }\r\n\r\n    stopHubConnection = () => {\r\n        this.hubConnection?.stop().catch(error => console.log('Error stopping connection: ', error));\r\n    }\r\n    clearComments = () => {\r\n        this.comments = [];\r\n        this.stopHubConnection();\r\n    }\r\n    addComment = async (values: any) => {\r\n        values.activityId = store.activityStore.selectedActivity?.id;\r\n        try {\r\n            await this.hubConnection?.invoke('SendComment', values);\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}","import { observer } from 'mobx-react-lite';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { Button, Container, Menu, Image, Dropdown } from 'semantic-ui-react';\r\nimport { useStore } from '../stores/store';\r\n\r\nexport default observer(function NavBar() {\r\n    const { userStore: { user, logout, isLoggedIn } } = useStore();\r\n    return (\r\n        <Menu inverted fixed='top'>\r\n            <Container>\r\n                <Menu.Item as={NavLink} to='/' exact header>\r\n                    <img src='assets/logo.png' alt='logo' style={{ marginRight: 10 }} />\r\n                    Reactivities\r\n                </Menu.Item>\r\n                {isLoggedIn &&\r\n                <>\r\n                    <Menu.Item as={NavLink} to='/activities' name='Activities' />\r\n                    <Menu.Item as={NavLink} to='/errors' name='Errors' />\r\n                    <Menu.Item>\r\n                        <Button as={NavLink} to='/createActivity' positive content='Create Activity' />\r\n                    </Menu.Item>\r\n                    <Menu.Item position='right'>\r\n                        <Image src={user?.image || '/assets/user.png'} avatar spaced='right' />\r\n                        <Dropdown pointing='top left' text={user?.displayName}>\r\n                            <Dropdown.Menu>\r\n                                <Dropdown.Item as={Link} to={`/profiles/${user?.username}`} text='MyProfile' icon='user' />\r\n                                <Dropdown.Item onClick={logout} text='Logout' icon='power' />\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                    </Menu.Item>\r\n                </>}\r\n            </Container>\r\n        </Menu>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport Calendar from \"react-calendar\";\r\nimport { Header, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nexport default observer (function ActivityFilters(){\r\n    const {activityStore: {predicate, setPredicate}} = useStore();\r\n    return(\r\n        <>\r\n            <Menu vertical size=\"large\" style={{width:'100%', marginTop:'28px'}}>\r\n                <Header icon= 'filter' attached collor='teal' content= 'Filters'/>\r\n                <Menu.Item \r\n                content='All activities'\r\n                active={predicate.has('all')}\r\n                onClick={() => setPredicate('all', 'true')}\r\n                />\r\n                <Menu.Item \r\n                content=\"I`m going\"\r\n                active={predicate.has('isGoing')}\r\n                onClick={() => setPredicate('isGoing', 'true')}\r\n                />\r\n                <Menu.Item \r\n                content=\"I'm hosting\"\r\n                active={predicate.has('isHost')}\r\n                onClick={() => setPredicate('isHost', 'true')}\r\n                />\r\n            </Menu>\r\n            <Header />\r\n            <Calendar \r\n            onChange={(date: Date) => setPredicate('startDate', date as Date)}\r\n            value={predicate.get('startDate') || new Date()}\r\n            />\r\n        </>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { SyntheticEvent } from \"react\";\r\nimport { Button, Reveal } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({ profile }: Props) {\r\n    const {profileStore, userStore} = useStore();\r\n    const {updateFollowing, loading  } = profileStore;\r\n\r\n    if (userStore.user?.username === profile.username) {\r\n        return null;\r\n    }\r\n    function handleFollow(e: SyntheticEvent, username: string){\r\n        e.preventDefault();\r\n        profile.following ? updateFollowing(username, false) : updateFollowing(username, true);\r\n    }\r\n\r\n    return (\r\n        <Reveal animated='move'>\r\n            <Reveal.Content visible style={{ width: '100%' }}>\r\n                <Button \r\n                fluid color='teal' \r\n                content={profile.following ? 'Following' : 'Not Following'} \r\n                />\r\n            </Reveal.Content>\r\n            <Reveal.Content hidden style={{ width: '100%' }}>\r\n                <Button\r\n                    fluid\r\n                    basic\r\n                    color={profile.following ? 'red' : 'green'}\r\n                    content={profile.following ? 'Unfollow' : 'Follow'}\r\n                    loading={loading} \r\n                    onClick={(e) => handleFollow(e, profile.username) }\r\n                    />\r\n            </Reveal.Content>\r\n        </Reveal>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\nprofile: Profile;\r\n}\r\n\r\n\r\nexport default observer (function ProfileCard({profile} : Props){\r\n\r\n    function truncate(str: string | undefined){\r\n        if (str) {\r\n            return str?.length > 40 ? str?.substring(0, 37) + '...': str;\r\n        }\r\n    }\r\n    return(\r\n        <Card as={Link} to={`/profiles/${profile.username}`}>\r\n            <Image src={profile.image || `/assets/user.png`}/>\r\n                 <Card.Content>\r\n                    <Card.Header>{profile.displayName}</Card.Header>\r\n                    <Card.Description>{truncate(profile.bio)}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content extra>\r\n                    <Icon name='user'/>\r\n                   {profile.followersCount} followers\r\n                </Card.Content>\r\n                <FollowButton profile={profile} />\r\n        </Card>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { List, Image, Popup } from \"semantic-ui-react\"\r\nimport { Profile } from \"../../../app/models/profile\"\r\nimport ProfileCard from \"../../profiles/ProfileCard\"\r\n\r\ninterface Props {\r\n    attendees: Profile[];\r\n}\r\n\r\nexport default observer(function ActivityListItemAttendee({ attendees }: Props) {\r\n    const styles = {\r\n        borderColor: 'orange',\r\n        borderWidth: 3\r\n    }\r\n    return (\r\n        <List horizontal>\r\n            {attendees.map(attendee => (\r\n                <Popup\r\n                    hoverable\r\n                    key={attendee.username}\r\n                    trigger={\r\n                        <List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}>\r\n                            <Image \r\n                            size='mini' \r\n                            circular src={attendee.image || '/assets/user.png'} \r\n                            bordered\r\n                            style={attendee.following ? styles : null}\r\n                            />\r\n                        </List.Item>\r\n                    }\r\n                >\r\n                    <Popup.Content>\r\n                        <ProfileCard profile={attendee} />\r\n                    </Popup.Content>\r\n                </Popup>\r\n            ))}\r\n        </List>\r\n    )\r\n})","import { format } from 'date-fns';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Icon, Item, Label, Segment } from 'semantic-ui-react';\r\nimport { Activity } from '../../../app/models/activity';\r\nimport ActivityListItemAttendee from './ActivityListItemAttendee';\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default function ActivityListItem({ activity }: Props) {\r\n\r\n    return (\r\n        <Segment.Group>\r\n            <Segment>\r\n                {activity.isCancelled &&\r\n                    <Label attached='top' color='red' content='Cancelled' style={{textAlign: 'center'}}/>\r\n                }\r\n                <Item.Group>\r\n                    <Item>\r\n                        <Item.Image style={{marginBottom: 3}} size='tiny' circular src={activity.host?.image || '/assets/user.png'} />\r\n                        <Item.Content>\r\n                            <Item.Header as={Link} to={`/activities/${activity.id}`}> {activity.title}\r\n                            </Item.Header>\r\n                            <Item.Description>Hosted by <Link to={`/profiles/${activity.hostUsername}`} >{activity.host?.displayName}</Link></Item.Description>\r\n                            {activity.isHost && (\r\n                                <Item.Description>\r\n                                    <Label basic color='orange'>\r\n                                        You are hosting this activity\r\n                                    </Label>\r\n                                </Item.Description>\r\n                            )}\r\n                            {activity.isGoing && !activity.isHost && (\r\n                                <Item.Description>\r\n                                    <Label basic color='green'>\r\n                                        You are attending this activity\r\n                                    </Label>\r\n                                </Item.Description>\r\n                            )}\r\n                        </Item.Content>\r\n                    </Item>\r\n                </Item.Group>\r\n            </Segment>\r\n            <Segment>\r\n                <span>\r\n                    <Icon name='clock' /> {format (activity.date!, 'dd MMMM yyyy H:mm aa')}\r\n                    <Icon name='marker' /> {activity.venue}\r\n                </span>\r\n            </Segment>\r\n            <Segment secondary>\r\n                <ActivityListItemAttendee attendees={activity.attendees!}/>\r\n            </Segment>\r\n            <Segment clearing>\r\n                <span>{activity.description}</span>\r\n                < Button\r\n                    as={Link}\r\n                    to={`/activities/${activity.id}`}\r\n                    color='teal'\r\n                    floated='right'\r\n                    content='View'\r\n                />\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport { Fragment } from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityListItem from \"./ActivityListItem\";\r\n\r\nexport default observer(function ActivityList() {\r\n    const { activityStore } = useStore();\r\n    const { groupedActivities } = activityStore;\r\n    return (\r\n        <>\r\n            {groupedActivities.map(([group, activities]) =>\r\n                <Fragment key={group}>\r\n                    <Header sub color='teal'>\r\n                        {group}\r\n                    </Header>\r\n                    {activities.map(activity => (\r\n                        <ActivityListItem key={activity.id} activity={activity} />\r\n                    ))}\r\n                </Fragment>\r\n            )}\r\n        </>\r\n    )\r\n})\r\n","import { Fragment } from 'react';\r\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n    return (\r\n        <Fragment>\r\n            <Placeholder fluid style={{ marginTop: 25 }}>\r\n                <Segment.Group>\r\n                    <Segment style={{ minHeight: 110 }}>\r\n                        <Placeholder>\r\n                            <Placeholder.Header image>\r\n                                <Placeholder.Line />\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Header>\r\n                            <Placeholder.Paragraph>\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Paragraph>\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Placeholder>\r\n                            <Placeholder.Line />\r\n                            <Placeholder.Line />\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment secondary style={{ minHeight: 70 }} />\r\n                    <Segment clearing>\r\n                        <Button disabled color='blue' floated='right' content='View' />\r\n                    </Segment>\r\n                </Segment.Group>\r\n            </Placeholder>\r\n        </Fragment>\r\n    );\r\n};","\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useEffect, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Grid, Loader } from \"semantic-ui-react\";\r\nimport { PagingParams } from \"../../../app/models/pagination\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityFilters from \"./ActivityFilters\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\r\n\r\n\r\nexport default observer(function ActivityDashboard() {\r\n    const { activityStore } = useStore();\r\n    const { loadActivities, activityRegistry, setPagingParams, pagination } = activityStore;\r\n    const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n    function handleGetNext() {\r\n        setLoadingNext(true);\r\n        setPagingParams(new PagingParams(pagination!.currentPage + 1))\r\n        loadActivities().then(() => setLoadingNext(false));\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (activityRegistry.size === 0) loadActivities();\r\n    }, [activityRegistry.size, loadActivities]);\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width='10'>\r\n                {activityStore.loadingInitial && !loadingNext ? (\r\n                    <>\r\n                        <ActivityListItemPlaceholder />\r\n                        <ActivityListItemPlaceholder />\r\n                    </>\r\n                ) : (\r\n                    <InfiniteScroll\r\n                        pageStart={0}\r\n                        loadMore={handleGetNext}\r\n                        hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages}\r\n                        initialLoad={false}\r\n                    >\r\n                        <ActivityList />\r\n                    </InfiniteScroll>\r\n                )}\r\n            </Grid.Column>\r\n            <Grid.Column width='6'>\r\n                <ActivityFilters />\r\n            </Grid.Column>\r\n            <Grid.Column width={10}>\r\n                <Loader active={loadingNext} />\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})","import { useField } from \"formik\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\n\r\ninterface Props{\r\n    placeholder: string;\r\n    name : string;\r\n    type?: string;\r\n    label? : string;\r\n}\r\n\r\nexport default function MyTextInpun(props : Props){\r\n    const [field, meta] = useField(props.name)\r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <input {... field } {... props}/>\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'> {meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n    )\r\n}","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button, Header, Label } from \"semantic-ui-react\";\r\nimport MyTextInpun from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer (function LoginForm(){\r\n    const {userStore} = useStore();\r\n    return(\r\n        <Formik\r\n            initialValues={{email: '', password: '', error: null}}\r\n            onSubmit={(values, {setErrors}) => userStore.login(values).catch(error =>\r\n                setErrors({error: error.response.data}))}\r\n            >\r\n                {({handleSubmit, isSubmitting, errors}) => (\r\n                    <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n                        <Header as='h2' content='Login to Reactivities' color='teal' textAlign='center'/>\r\n                       <MyTextInpun name='email' placeholder='Email' />\r\n                       <MyTextInpun name='password' placeholder='password' type='password' />\r\n                       <ErrorMessage\r\n                            name='error' render={() =>\r\n                            <Label style={{marginBottom: 10}} basic color='red' content={errors.error}/>} />\r\n                       <Button loading={isSubmitting} positive content='Login' type=\"submit\" fluid/>\r\n                    </Form>\r\n                )}\r\n        </Formik>\r\n    )\r\n})","import { Message } from \"semantic-ui-react\";\r\n\r\n\r\ninterface Props {\r\n    errors: any;\r\n}\r\n\r\nexport default function ValidationError({errors}: Props) {\r\n    return(\r\n        <Message error>\r\n            {errors &&(\r\n                <Message.List>\r\n                    {errors.map((err: any, i: any) =>(\r\n                        <Message.Item key={i}>{err}</Message.Item>\r\n                    ))}\r\n                </Message.List>\r\n            )}\r\n        </Message>\r\n    )\r\n}","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button, Header } from \"semantic-ui-react\";\r\nimport MyTextInpun from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from 'yup';\r\nimport ValidationErrors from \"../errors/ValidationErrors\";\r\n\r\nexport default observer (function RegisterForm(){\r\n    const {userStore} = useStore();\r\n    return(\r\n        <Formik\r\n            initialValues={{displayName: '', username: '', email: '', password: '', error: null}}\r\n            onSubmit={(values, {setErrors}) => userStore.register(values).catch(error =>\r\n                setErrors({error}))}\r\n                validationSchema = {Yup.object({\r\n                    displayName: Yup.string().required(),\r\n                    username: Yup.string().required(),\r\n                    email: Yup.string().required().email(),\r\n                    password: Yup.string().required(),\r\n                })}\r\n            >\r\n                {({handleSubmit, isSubmitting, errors, isValid, dirty}) => (\r\n                    <Form className='ui form error' onSubmit={handleSubmit} autoComplete='off'>\r\n                        <Header as='h2' content='Sign up to Reactivities' color='teal' textAlign='center'/>\r\n                       <MyTextInpun name='displayName' placeholder='Display Name' />\r\n                       <MyTextInpun name='username' placeholder='Username' />\r\n                       <MyTextInpun name='email' placeholder='Email' />\r\n                       <MyTextInpun name='password' placeholder='Password' type='password' />\r\n                       <ErrorMessage\r\n                            name='error' render={() =>\r\n                            <ValidationErrors errors={errors.error} />}\r\n                      />\r\n                       <Button disabled={!isValid || !dirty || isSubmitting} loading={isSubmitting} positive content='Register' type=\"submit\" fluid/>\r\n                    </Form>\r\n                )}\r\n        </Formik>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Header, Segment, Image, Button, Divider } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"../users/LoginForm\";\r\nimport RegisterForm from \"../users/RegisterForm\";\r\n\r\nexport default observer(function HomePage() {\r\n    const { userStore, modalStore } = useStore();\r\n    return (\r\n        <Segment inverted textAlign='center' vertical className=\"masthead\">\r\n            <Container text>\r\n                <Header as='h1' inverted>\r\n                    <Image size='massive' src='/assets/logo.png' style={{ marginBottom: 12 }} />\r\n                    Activity Hub\r\n                </Header>\r\n                {userStore.isLoggedIn ? (\r\n                    <>\r\n                        <Header as='h2' inverted content='Welcome to Global Activity Store!' />\r\n                        <Button as={Link} to='/activities' size='huge' inverted>\r\n                            Go to Activities!!!\r\n                        </Button>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <Button onClick={() => modalStore.openModal(<LoginForm />)} size='huge' inverted>\r\n                            Login\r\n                        </Button>\r\n                        <Button onClick={() => modalStore.openModal(<RegisterForm />)} size='huge' inverted>\r\n                            Register\r\n                        </Button>\r\n                        <Divider horizontal inverted> Or </Divider>\r\n                        <Button \r\n                            loading={userStore.fbLoading}\r\n                            size='huge'\r\n                            inverted\r\n                            color='facebook'\r\n                            content='Login with Facebook'\r\n                            onClick={userStore.facebookLogin}\r\n                        />\r\n                    </>\r\n                )}\r\n            </Container>\r\n        </Segment>\r\n    )\r\n})","import React from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n    inverted?: boolean;\r\n    content?: string;\r\n}\r\n\r\nexport default function LoadingComponent({inverted=true, content= 'Loading...'}: Props) {\r\n    return(\r\n        <Dimmer active= {true} inverted={inverted}>\r\n        <Loader content={content} />\r\n        </ Dimmer>\r\n    )\r\n}","import { useField } from \"formik\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\n\r\ninterface Props{\r\n    placeholder: string;\r\n    name : string;\r\n    rows: number;\r\n    label? : string;\r\n}\r\n\r\nexport default function MyTextArea(props : Props){\r\n    const [field, meta] = useField(props.name)\r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <textarea {... field } {... props}/>\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'> {meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n    )\r\n}","import { useField } from \"formik\";\r\nimport { Form, Label, Select } from \"semantic-ui-react\";\r\n\r\n\r\ninterface Props{\r\n    placeholder: string;\r\n    name : string;\r\n    options : any;\r\n    label? : string;\r\n}\r\n\r\nexport default function MySelectInpun(props : Props){\r\n    const [field, meta, helpers] = useField(props.name)\r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <Select\r\n                clearable\r\n                options={props.options}\r\n                value={field.value || null}\r\n                onChange={(e, d) => helpers.setValue(d.value)}\r\n                onBlur={() => helpers.setTouched(true)}\r\n                placeholder={props.placeholder\r\n                }\r\n            />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'> {meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n    )\r\n}","export const categoryOptions = [\r\n    {text: 'Drinks', value: 'drinks'},\r\n    {text: 'Culture', value: 'culture'},\r\n    {text: 'Film', value: 'film'},\r\n    {text: 'Food', value: 'food'},\r\n    {text: 'Music', value: 'music'},\r\n    {text: 'Travel', value: 'travel'},\r\n]","import { useField } from \"formik\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport DatePicker, {ReactDatePickerProps} from \"react-datepicker\";\r\n\r\n\r\n\r\n\r\nexport default function MyDateInpun(props : Partial<ReactDatePickerProps>){\r\n    const [field, meta, helpers] = useField(props.name!)\r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <DatePicker\r\n            {...field}\r\n            {...props}\r\n            selected={((field.value && new Date(field.value)) || null)}\r\n            onChange={value => helpers.setValue(value)}\r\n            />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'> {meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponents\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MyTextInpun from \"../../../app/common/form/MyTextInput\";\r\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\r\nimport MySelectInpun from \"../../../app/common/form/MySelectInput\";\r\nimport { categoryOptions } from \"../../../app/common/options/categoryOptions\";\r\nimport MyDateInpun from \"../../../app/common/form/MyDateInput\";\r\nimport { ActivityFormValues } from \"../../../app/models/activity\";\r\nimport { v4 as uuid } from 'uuid'\r\n\r\n\r\nexport default observer(function ActivityForm() {\r\n    const history = useHistory();\r\n    const { activityStore } = useStore();\r\n    const { createActivity, updateActivity, loadActivity, loadingInitial } = activityStore;\r\n    const { id } = useParams<{ id: string }>()\r\n    const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\r\n\r\n    const validationSchema = Yup.object({\r\n        title: Yup.string().required('The activity title is required'),\r\n        description: Yup.string().required('The activity description is required'),\r\n        category: Yup.string().required(),\r\n        date: Yup.string().required('Date is required').nullable(),\r\n        city: Yup.string().required(),\r\n        venue: Yup.string().required(),\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (id) loadActivity(id).then(activity => setActivity(new ActivityFormValues(activity!)))\r\n    }, [id, loadActivity]);\r\n\r\n    function handleFormSubmit(activity: ActivityFormValues) {\r\n        if (!activity.id) {\r\n            let newActivity = {\r\n                ...activity,\r\n                id: uuid(),\r\n            };\r\n            createActivity(newActivity).then(() => history.push(`/activities/${newActivity.id}`))\r\n        } else {\r\n            updateActivity(activity).then(() => history.push(`/activities/${activity.id}`))\r\n        }\r\n    }\r\n\r\n    if (loadingInitial) return <LoadingComponent content='Loading activity...' />\r\n\r\n    return (\r\n        <Segment clearing>\r\n            <Header content='Activity Details' sub color='teal' />\r\n            <Formik\r\n                validationSchema={validationSchema}\r\n                enableReinitialize\r\n                initialValues={activity}\r\n                onSubmit={values => handleFormSubmit(values)}>\r\n                {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n                    <Form className=\"ui form\" onSubmit={handleSubmit} >\r\n                        <MyTextInpun name='title' placeholder=\"Title\" />\r\n                        <MyTextArea rows={3} placeholder=\"Description\" name='description' />\r\n                        <MySelectInpun options={categoryOptions} placeholder=\"Category\" name='category' />\r\n                        <MyDateInpun\r\n                            placeholderText=\"Date\"\r\n                            name='date'\r\n                            showTimeSelect\r\n                            timeCaption='time'\r\n                            dateFormat='MMMM dd yyyy h:mm aa'\r\n                        />\r\n                        <Header content='Location Details' sub color='teal' />\r\n                        <MyTextInpun placeholder=\"City\" name='city' />\r\n                        <MyTextInpun placeholder=\"Venue\" name='venue' />\r\n                        <Button\r\n                            disabled={isSubmitting || !dirty || !isValid}\r\n                            loading={isSubmitting}\r\n                            floated='right'\r\n                            positive type='submit'\r\n                            content='Submit' />\r\n                        <Button\r\n                            as={Link}\r\n                            to='/activities'\r\n                            floated='right'\r\n                            type='button'\r\n                            content='Cancel'\r\n                        />\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </Segment>\r\n    )\r\n})","import { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Header, Item, Segment, Image, Label} from 'semantic-ui-react'\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\nconst activityImageStyle = {\r\n    filter: 'brightness(30%)'\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n    position: 'absolute',\r\n    bottom: '5%',\r\n    left: '5%',\r\n    width: '100%',\r\n    height: 'auto',\r\n    color: 'white'\r\n};\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\r\n    const { activityStore: { updateAttendance, loading, cancelActivityToggle } } = useStore();\r\n    return (\r\n        <Segment.Group>\r\n            <Segment basic attached='top' style={{ padding: '0' }}>\r\n                {activity.isCancelled &&\r\n                    <Label style={{ position: 'absolute', zIndex: 1000, left: -14, top: 20 }}\r\n                        ribbon color='red' content='Cancelled' />\r\n                }\r\n                <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle} />\r\n                <Segment style={activityImageTextStyle} basic>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Content>\r\n                                <Header\r\n                                    size='huge'\r\n                                    content={activity.title}\r\n                                    style={{ color: 'white' }}\r\n                                />\r\n                                <p>{format(activity.date!, 'dd MMMM yyyy')}</p>\r\n                                <p>\r\n                                    Hosted by <strong><Link to={`/profiles/${activity.host?.username}`}>{activity.host?.displayName}</Link></strong>\r\n                                </p>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Segment>\r\n            </Segment>\r\n            <Segment clearing attached='bottom'>\r\n                {activity.isHost ? (\r\n                    <>\r\n                        <Button\r\n                            color={activity.isCancelled ? 'green' : 'red'}\r\n                            floated='left'\r\n                            basic\r\n                            content={activity.isCancelled ? 'Re-activate Activity' : 'Cancel Activity'}\r\n                            onClick={cancelActivityToggle}\r\n                            loading={loading}\r\n                        />\r\n                        <Button as={Link}\r\n                            disabled={activity.isCancelled}\r\n                            to={`/manage/${activity.id}`}\r\n                            color='orange'\r\n                            floated='right'>\r\n                            Manage Event\r\n                        </Button>\r\n                    </>\r\n                ) : activity.isGoing ? (\r\n                    <Button\r\n                        loading={loading}\r\n                        onClick={updateAttendance}>Cancel attendance\r\n                    </Button>\r\n                ) : (\r\n                    <Button\r\n                        disabled={activity.isCancelled}\r\n                        loading={loading}\r\n                        onClick={updateAttendance}\r\n                        color='teal'>Join Activity\r\n                    </Button>\r\n                )}\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})\r\n","import { Formik, Form, Field, FieldProps } from 'formik'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Segment, Header, Comment, Loader } from 'semantic-ui-react'\r\nimport { useStore } from '../../../app/stores/store'\r\nimport * as Yup from 'yup'\r\nimport { formatDistanceToNow } from 'date-fns/esm'\r\n\r\ninterface Props {\r\n    activityId: string;\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\r\n    const { commentStore } = useStore();\r\n\r\n    useEffect(() => {\r\n        if (activityId) {\r\n            commentStore.createHubConnection(activityId);\r\n        }\r\n        return () => {\r\n            commentStore.clearComments();\r\n        }\r\n    }, [commentStore, activityId]);\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                attached='top'\r\n                inverted\r\n                color='teal'\r\n                style={{ border: 'none' }}\r\n            >\r\n                <Header>Chat about this event</Header>\r\n            </Segment>\r\n            <Segment attached clearing>\r\n                <Formik onSubmit={(values, { resetForm }) => commentStore.addComment(values).then(() => resetForm())}\r\n                    initialValues={{ body: '' }}\r\n                    validationSchema={Yup.object({\r\n                        body: Yup.string().required()\r\n                    })}\r\n                >\r\n                    {({ isSubmitting, isValid, handleSubmit }) => (\r\n                        <Form className='ui form'>\r\n                            <Field name='body'>\r\n                                {(props: FieldProps) => (\r\n                                    <div style={{ position: 'relative' }}>\r\n                                        <Loader active={isSubmitting} />\r\n                                        <textarea\r\n                                            placeholder='Enter to submit, SHIFT + enter for new line'\r\n                                            rows={2}\r\n                                            {...props.field}\r\n                                            onKeyPress={e => {\r\n                                                if (e.key === 'Enter' && e.shiftKey) {\r\n                                                    return;\r\n                                                }\r\n                                                if (e.key === 'Enter' && !e.shiftKey) {\r\n                                                    e.preventDefault();\r\n                                                    isValid && handleSubmit();\r\n                                                }\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n                            </Field>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n                <Comment.Group>\r\n                    {commentStore.comments.map(comment => (\r\n                        <Comment key={comment.id}>\r\n                            <Comment.Avatar src={comment.image || '/assets/user.png'} />\r\n                            <Comment.Content>\r\n                                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>{comment.displayName}</Comment.Author>\r\n                                <Comment.Metadata>\r\n                                    <div>{formatDistanceToNow(comment.createdAt)} ago</div>\r\n                                </Comment.Metadata>\r\n                                <Comment.Text style={{ whiteSpace: 'pre-wrap' }}>{comment.body}</Comment.Text>\r\n                            </Comment.Content>\r\n                        </Comment>\r\n                    ))}\r\n                </Comment.Group>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})","import { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport {Segment, Grid, Icon} from 'semantic-ui-react'\r\nimport {Activity} from \"../../../app/models/activity\";\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({activity}: Props) {\r\n    return (\r\n        <Segment.Group>\r\n            <Segment attached='top'>\r\n                <Grid>\r\n                    <Grid.Column width={1}>\r\n                        <Icon size='large' color='teal' name='info'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n                        <p>{activity.description}</p>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='calendar' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n            <span>\r\n              {format (activity.date!, 'dd MMM yyyy H:mm aa')}\r\n            </span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='marker' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={11}>\r\n                        <span>{activity.venue}, {activity.city}</span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})","import React from 'react'\r\nimport { Segment, List, Label, Item, Image } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Activity } from '../../../app/models/activity'\r\n\r\ninterface Props {\r\n    activity : Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedSidebar({ activity : {attendees, host} }: Props) {\r\n    if (!attendees) {\r\n        return  null;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                style={{ border: 'none' }}\r\n                attached='top'\r\n                secondary\r\n                inverted\r\n                color='teal'\r\n            >\r\n                {attendees.length} {attendees.length === 1 ? 'Person' : 'People'} going\r\n            </Segment>\r\n            <Segment attached>\r\n                <List relaxed divided>\r\n                    {attendees.map(attendee => (\r\n                        <Item style={{ position: 'relative' }} key={attendee.username}>\r\n                            {attendee.username === host?.username &&\r\n                            <Label\r\n                                style={{ position: 'absolute' }}\r\n                                color='orange'\r\n                                ribbon='right'\r\n                            >\r\n                                Host\r\n                            </Label>}\r\n                            <Image size='tiny' src={attendee.image || '/assets/user.png'} />\r\n                            <Item.Content verticalAlign='middle'>\r\n                                <Item.Header as='h3'>\r\n                                    <Link to={`/profile/${attendee.username}`}>{attendee.displayName}</Link>\r\n                                </Item.Header>\r\n                                    {attendee.following &&\r\n                                <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>}\r\n                            </Item.Content>\r\n                        </Item>\r\n                    ))}\r\n                </List>\r\n            </Segment>\r\n        </>\r\n    )\r\n})\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport {  Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponents\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityDetailedHeader from \"./ActivitiyDetailedHeader\";\r\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\r\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\r\nimport ActivityDetailedSideBar from \"./ActivityDetailedSideBar\";\r\n\r\nexport default observer(function ActivityDetails() {\r\n  const { activityStore } = useStore();\r\n  const { selectedActivity: activity, loadActivity, loadingInitial, clearSelectedActivity } = activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivity(id);\r\n    return () => clearSelectedActivity();\r\n  }, [id, loadActivity, clearSelectedActivity]);\r\n\r\n  if (loadingInitial || !activity) return <LoadingComponent />;\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailedHeader activity={activity} />\r\n        <ActivityDetailedInfo activity={activity}/>\r\n        <ActivityDetailedChat activityId={activity.id}/>\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityDetailedSideBar activity={activity} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  )\r\n})","import { useState } from 'react';\r\nimport {Button, Header, Segment} from \"semantic-ui-react\";\r\nimport axios from 'axios';\r\nimport ValidationErrors from './ValidationErrors';\r\n\r\nexport default function TestErrors() {\r\n    const baseUrl = process.env.REACT_APP_API_URL;\r\n    const [errors, setErrors] = useState(null);\r\n\r\n    function handleNotFound() {\r\n        axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadRequest() {\r\n        axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleServerError() {\r\n        axios.get(baseUrl + 'buggy/server-error').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleUnauthorised() {\r\n        axios.get(baseUrl + 'buggy/unauthorised').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadGuid() {\r\n        axios.get(baseUrl + 'activities/notaguid').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleValidationError() {\r\n        axios.post(baseUrl + 'activities', {}).catch(err => setErrors(err));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header as='h1' content='Test Error component' />\r\n            <Segment>\r\n                <Button.Group widths='7'>\r\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\r\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\r\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\r\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\r\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\r\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\r\n                </Button.Group>\r\n            </Segment>\r\n            { errors &&\r\n            <ValidationErrors errors={errors}/>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nexport default function NotFound(){\r\n    return(\r\n        <Segment placeholder>\r\n            <Header>\r\n                <Icon name='search' />\r\n                Well, we've looked everywhere and could not find this\r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={Link} to='/activities' primary>\r\n                Return to activity page\r\n                </Button>\r\n            </Segment.Inline>\r\n        </Segment>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport { Container, Header, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer (function ServerError() {\r\n    const {commonStore} = useStore();\r\n    return(\r\n        <Container>\r\n            <Header as='h1' content='ServerError'/>\r\n            <Header sub as='h5' color='red' content={commonStore.error?.message}/>\r\n            {commonStore.error?.details &&\r\n                <Segment>\r\n                    <Header as='h4' content='Stack trace' color='teal'/>\r\n                    <code style={{marginTop: '10px'}}>{commonStore.error.details}</code>\r\n                </Segment>\r\n            }\r\n        </Container>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../stores/store\";\r\n\r\nexport default observer (function ModalContainer(){\r\n    const {modalStore} = useStore();\r\n    return(\r\n        <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\r\n            <Modal.Content>\r\n                {modalStore.modal.body}\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n})","import { Formik, Form } from 'formik';\r\nimport { observer } from 'mobx-react-lite'\r\nimport { useStore } from '../../app/stores/store'\r\nimport * as Yup from 'yup';\r\nimport { Button} from 'semantic-ui-react';\r\nimport MyTextInpun from '../../app/common/form/MyTextInput';\r\nimport MyTextArea from '../../app/common/form/MyTextArea';\r\n\r\ninterface Props{\r\n    setEditMode: (editMode: boolean) => void;\r\n}\r\nexport default observer (function ProfileEditForm({setEditMode}: Props){\r\n    const {profileStore: {profile, updateProfile}} = useStore();\r\n    \r\n    return (\r\n        <Formik\r\n        initialValues={{displayName: profile?.displayName, bio: profile?.bio}}\r\n        onSubmit={values => {\r\n            updateProfile(values).then(() => {\r\n                setEditMode(false);\r\n            })\r\n        }}\r\n        validationSchema={Yup.object({\r\n            displayName: Yup.string().required()\r\n        })}\r\n        >\r\n            {({isSubmitting, isValid, dirty}) => (\r\n                <Form className='ui form'>\r\n                    <MyTextInpun placeholder='Display Name' name='displayName'/>\r\n                    <MyTextArea rows={3} placeholder='Add your bio' name='bio'/>\r\n                    <Button\r\n                        positive\r\n                        type='submit'\r\n                        loading={isSubmitting}\r\n                        content='Update profile'\r\n                        floated='right'\r\n                        disabled={!isValid || !dirty}\r\n                    />\r\n                </Form>\r\n            )}\r\n        </ Formik>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { useState } from \"react\";\r\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileEditForm from \"./ProfileEditForm\";\r\n\r\nexport default observer(function ProfileAbout() {\r\n    const { profileStore } = useStore();\r\n    const { isCurrentUser, profile } = profileStore;\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    return (\r\n        <Tab.Pane>\r\n            <Grid>\r\n                <Grid.Column width='16'>\r\n                    <Header floated='left' icon='user' content={`About ${profile?.displayName}`} />\r\n                    {isCurrentUser && (\r\n                        <Button\r\n                            floated='right'\r\n                            basic\r\n                            content={editMode ? 'Cancel' : 'Edit Profile'}\r\n                            onClick={() => setEditMode(!editMode)}\r\n                        />\r\n                    )}\r\n                </Grid.Column>\r\n                <Grid.Column width='16'>\r\n                    {editMode ? <ProfileEditForm setEditMode={setEditMode} /> :\r\n                        <span style={{ whiteSpace: 'pre-wrap' }}> {profile?.bio}</span>}\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileCard from \"./ProfileCard\";\r\n\r\nexport default observer (function ProfileFollowings(){\r\n    const {profileStore} = useStore();\r\n    const {profile, followings, loadingFollowings, activeTab} = profileStore;\r\n\r\n    return(\r\n        <Tab.Pane loading={loadingFollowings}>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header \r\n                    floated='left' \r\n                    icon='user' \r\n                    content={activeTab === 3 ? `People following ${profile?.displayName}` : `People ${profile?.displayName} is following`}\r\n                    />\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    <Card.Group itemsPerRow={4}>\r\n                        {followings.map(profile => (\r\n                            <ProfileCard key={profile.username} profile={profile}/>\r\n                        ))}\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})","import {Cropper} from 'react-cropper';\r\nimport 'cropperjs/dist/cropper.css';\r\n\r\ninterface Props{\r\n    imagePreview: string;\r\n    setCropper:(cropper: Cropper) => void;\r\n}\r\n\r\nexport  default function PhotoWidgetCropper({imagePreview, setCropper}: Props){\r\n    return(\r\n        <Cropper\r\n            src={imagePreview}\r\n            style={{height: 200, width: '100%'}}\r\n            initialAspectRatio={1}\r\n            aspectRatio={1}\r\n            preview='.img-preview'\r\n            guides={false}\r\n            viewMode={1}\r\n            autoCropArea={1}\r\n            background={false}\r\n            onInitialized={cropper => setCropper(cropper)}\r\n        />\r\n    )\r\n}","import React, { useCallback } from 'react'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { Header, Icon } from 'semantic-ui-react'\r\n\r\ninterface Props {\r\n    setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropzone({ setFiles }: Props) {\r\n    const dzStyles = {\r\n        border: 'dashed 3px #eee',\r\n        borderColor: '#eee',\r\n        borderRadius: '5px',\r\n        paddingTop: '30px',\r\n        textAlign: 'center' as 'center',\r\n        height: 200\r\n    }\r\n\r\n    const dzActive = {\r\n        borderColor: 'green'\r\n    }\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        setFiles(acceptedFiles.map((file: any) => Object.assign(file, {\r\n            preview: URL.createObjectURL(file)\r\n        })))\r\n    }, [setFiles])\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\r\n\r\n    return (\r\n        <div {...getRootProps()} style={isDragActive ? {...dzStyles, ...dzActive} : dzStyles}>\r\n            <input {...getInputProps()} />\r\n            <Icon name='upload' size='huge'/>\r\n            <Header content='Drop image here'/>\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Header } from \"semantic-ui-react\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\r\n\r\ninterface Props{\r\n    loading: boolean;\r\n    uploadPhoto:(file: Blob) => void;\r\n\r\n}\r\n\r\nexport default function PhotoUploadWidget({loading, uploadPhoto} : Props){\r\n    const [files, setFiles] = useState<any>([]);\r\n    const [cropper, setCropper] = useState<Cropper>();\r\n\r\n    function onCrop(){\r\n        if (cropper) {\r\n            cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!));\r\n        }\r\n    }\r\n\r\n    useEffect(() =>{\r\n        return () => {\r\n            files.forEach((file: any) => URL.revokeObjectURL(file.preview));\r\n        }\r\n    },[files])\r\n\r\n    return(\r\n        <Grid>\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 1 - Add Photo'/>\r\n                <PhotoWidgetDropzone setFiles={setFiles}/>\r\n            </Grid.Column>\r\n            <Grid.Column width={1} />\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 2 - Resize image'/>\r\n                {files && files.length > 0 && (\r\n                    <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview} />\r\n                )}\r\n            </Grid.Column>\r\n            <Grid.Column width={1} />\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 3 - Preview & Upload'/>\r\n                {files && files.length > 0 &&\r\n                <>\r\n                <div className='img-preview' style={{minHeight: 200, overflow: 'hidden'}}/>\r\n                <Button.Group widths={2}>\r\n                    <Button loading={loading} onClick={onCrop} positive icon='check'/>\r\n                    <Button disabled={loading} onClick={() => setFiles([])}  icon='close'/>\r\n                </Button.Group>\r\n                </>}\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport { SyntheticEvent, useState } from \"react\";\r\nimport { Card, Header, Tab, Image, Grid, Button } from \"semantic-ui-react\";\r\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\r\nimport { Photo, Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({ profile }: Props) {\r\n    const { profileStore: { isCurrentUser, uploadPhoto, uploading, loading, setMainPhoto, deletePhoto } } = useStore();\r\n    const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n    const [target, setTarget] = useState('');\r\n\r\n    function handlePhotoUpload(file: Blob){\r\n        uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n    }\r\n\r\n    function handleSetMainPhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>){\r\n        setTarget(e.currentTarget.name);\r\n        setMainPhoto(photo);\r\n    }\r\n\r\n    function handleDeletePhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>){\r\n        setTarget(e.currentTarget.name);\r\n        deletePhoto(photo);\r\n    }\r\n\r\n    return (\r\n        <Tab.Pane>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated='left' icon='image' content='Photos' />\r\n                    {isCurrentUser && (\r\n                        <Button floated='right' basic content={addPhotoMode ? 'Cancel' : 'Add Photo'}\r\n                            onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n                        />\r\n                    )}\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    {addPhotoMode ? (\r\n                        <PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploading} />\r\n                    ) : (\r\n                        <Card.Group itemsPerRow={5}>\r\n                            {profile.photos?.map(photo => (\r\n                                <Card key={photo.id}>\r\n                                    <Image src={photo.url} />\r\n                                    {isCurrentUser &&\r\n                                    <Button.Group>\r\n                                        <Button\r\n                                            basic\r\n                                            color='green'\r\n                                            content='Main'\r\n                                            name={'main' + photo.id}\r\n                                            disabled={photo.isMain}\r\n                                            loading={target === 'main' + photo.id && loading}\r\n                                            onClick={ e => handleSetMainPhoto(photo, e)}\r\n                                        />\r\n                                        <Button\r\n                                            basic color='red'\r\n                                            icon='trash'\r\n                                            loading={target === photo.id && loading}\r\n                                            onClick={ e => handleDeletePhoto(photo, e)}\r\n                                            disabled={photo.isMain}\r\n                                            name={photo.id}\r\n                                            />\r\n                                    </Button.Group>\r\n                                    }\r\n                                </Card>\r\n                            ))}\r\n                        </Card.Group>\r\n                    )}\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfileFollowings from \"./ProfileFollowings\";\r\nimport ProfilesPhotos from \"./ProfilesPhotos\";\r\n\r\ninterface Props{\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer (function ProfileContent({profile}: Props) {\r\n    const {profileStore} = useStore();\r\n    const panes = [\r\n        {menuItem: 'About', render: () => <ProfileAbout />},\r\n        {menuItem: 'Photos', render: () => <ProfilesPhotos profile={profile}/>},\r\n        {menuItem: 'Events', render: () => <Tab.Pane> Events Content</Tab.Pane>},\r\n        {menuItem: 'Followers', render: () => <ProfileFollowings />},\r\n        {menuItem: 'Following', render: () => <ProfileFollowings />}\r\n    ];\r\n\r\n    return(\r\n        <Tab\r\n            menu={{fluid: true, vertical: true}}\r\n            menuPosition= 'right'\r\n            panes={panes}\r\n            onTabChange={(e, data) =>  profileStore.setActiveTab(data.activeIndex)}\r\n        />\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport {Divider, Grid, Header, Item, Segment, Statistic } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n    profile: Profile\r\n}\r\n\r\nexport default observer(function ProfileHeader({ profile }: Props) {\r\n    return (\r\n        <Segment>\r\n            <Grid>\r\n                <Grid.Column width={12}>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Image avatar size='small' src={profile.image || '/assets/user.png'} />\r\n                            <Item.Content verticalAlign='middle'>\r\n                                <Header as='h1' content={profile.displayName} />\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Statistic.Group widths={2}>\r\n                        <Statistic label='Followers' value={profile.followersCount} />\r\n                        <Statistic label='Following' value={profile.followingCount} />\r\n                    </Statistic.Group>\r\n                    <Divider />\r\n                    <FollowButton profile={profile} />\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Segment>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponents\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\n\r\nexport default observer (function ProfilePage(){\r\n    const {username} = useParams<{username: string}>();\r\n    const {profileStore} = useStore();\r\n    const {loadingProfile, loadProfile, profile, setActiveTab} = profileStore;\r\n\r\n    useEffect(() => {\r\n        loadProfile(username);\r\n        return () => {\r\n            setActiveTab(0);\r\n        }\r\n    }, [loadProfile, username, setActiveTab])\r\n    \r\n    if (loadingProfile) {\r\n        return <LoadingComponent content='Loading profile ...'/>\r\n    }\r\n    \r\n    return(\r\n        <Grid>\r\n            <Grid.Column width={16}>\r\n                {profile &&\r\n                <>\r\n                <ProfileHeader profile={profile} />\r\n                <ProfileContent profile={profile} />\r\n                </>}\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})","import { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps{\r\n component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any> ;\r\n}\r\n\r\nexport default function PrivateRoute({component: Component, ...rest}: Props){\r\n    const {userStore: {isLoggedIn}} = useStore();\r\n    return(\r\n        <Route \r\n            {...rest}\r\n            render={(props) => isLoggedIn ? <Component {...props}/> : <Redirect to='/'/>}\r\n        />\r\n    )\r\n}","import { useLocation } from \"react-router\";\r\n\r\nexport default function useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}","import { toast } from \"react-toastify\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\nimport agent from \"../app/api/agents\";\r\nimport useQuery from \"../app/common/util/hooks\";\r\n\r\nexport default function RegisterSuccess() {\r\n    const email = useQuery().get('email') as string;\r\n\r\n    function handleConfirmEmailResend(){\r\n        agent.Account.resendEmailConfirm(email).then(() => {\r\n            toast.success('Verification resent, please check your email');\r\n        }).catch(error => console.log(error));\r\n    }\r\n    return(\r\n        <Segment placeholder textAlign='center'>\r\n            <Header icon='green'>\r\n                <Icon name='check'/>\r\n                Successfully registered!\r\n            </Header>\r\n            <p>Please check your email (including junk folder) foк the verification email</p>\r\n            {email && \r\n                <>\r\n                    <p>Didn't receive the email? Click the below button to resend</p>\r\n                    <Button primary onClick={handleConfirmEmailResend} content='Resend email' size='huge'/>\r\n                </>\r\n            }\r\n        </Segment>\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\nimport agent from \"../../app/api/agents\";\r\nimport useQuery from \"../../app/common/util/hooks\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"./LoginForm\";\r\n\r\nexport default function ConfirmEmail(){\r\n    const {modalStore} = useStore();\r\n    const email = useQuery().get('email') as string;\r\n    const token = useQuery().get('token') as string;\r\n\r\n    const Status = {\r\n        Verifying: 'Verifying',\r\n        Failed: 'Failed',\r\n        Success: 'Success'\r\n    }\r\n\r\n    const [status, setStatus] = useState(Status.Verifying);\r\n\r\n    function handleConfirmEmailResend(){\r\n        agent.Account.resendEmailConfirm(email).then(() => {\r\n            toast.success('Verification resent, please check your email');\r\n        }).catch(error => console.log(error));\r\n    }\r\n\r\n    useEffect(() => {\r\n        agent.Account.verifyEmail(token, email).then(() =>{\r\n            setStatus(Status.Success)\r\n        }).catch(() => {\r\n            setStatus(Status.Failed)\r\n        })\r\n    },[Status.Success, Status.Failed, token, email])\r\n\r\n    function getBody() {\r\n        switch (status) {\r\n            case Status.Verifying:\r\n                return <p>Verifying...</p>;\r\n            case Status.Failed:\r\n                return(\r\n                    <div>\r\n                        <p> Verification failed. You can try resending the verify link to your email</p>\r\n                        <Button primary onClick={handleConfirmEmailResend} size='huge' content='Resend email'/>\r\n                    </div>\r\n                )\r\n            case Status.Success:\r\n                return(\r\n                    <div>\r\n                        <p>Email is verified. You can now login</p>\r\n                        <Button primary onClick={() => modalStore.openModal(<LoginForm />)} size='huge' content='Login'/>\r\n                    </div>\r\n                );\r\n        }\r\n    }\r\n    return (\r\n        <Segment placeholder textAlign='center'>\r\n            <Header icon >\r\n                <Icon name='envelope'/>\r\n                Email verification\r\n            </Header>\r\n            <Segment.Inline>\r\n                {getBody()}\r\n            </Segment.Inline>\r\n        </Segment>\r\n    )\r\n}","\r\nimport { Container } from 'semantic-ui-react';\r\nimport NavBar from './navBar';\r\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Route, Switch, useLocation } from 'react-router-dom';\r\nimport HomePage from '../../features/home/HomePage';\r\nimport ActivityForm from '../../features/activities/form/ActivityForm';\r\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\r\nimport TestErrors from '../../features/errors/TestError';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport NotFound from '../../features/errors/NotFound';\r\nimport ServerError from '../../features/errors/ServerError';\r\nimport { useStore } from '../stores/store';\r\nimport { useEffect } from 'react';\r\nimport LoadingComponent from './LoadingComponents';\r\nimport ModalContainer from '../common/modals/ModalContainer';\r\nimport ProfilePage from '../../features/profiles/ProfilePage';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport RegisterSuccess from '../../features/RegisterSuccess';\r\nimport ConfirmEmail from '../../features/users/ConfirmEmail';\r\n\r\n\r\nfunction App() {\r\n  const location = useLocation();\r\n  const {commonStore, userStore} = useStore();\r\n\r\n  useEffect(() => {\r\n    if (commonStore.token) {\r\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\r\n    }else{\r\n      // commonStore.setAppLoaded();\r\n      userStore.getFacebookLoginStatus().then(() => commonStore.setAppLoaded());\r\n    }\r\n  }, [commonStore, userStore])\r\n\r\n  if (!commonStore.appLoaded) {\r\n    return <LoadingComponent content='App is not loading' />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer position='bottom-right' hideProgressBar />\r\n      <ModalContainer />\r\n      <Route exact path='/' component={HomePage} />\r\n      <Route\r\n        path={'/(.+)'}\r\n        render={() => (\r\n          <>\r\n            <NavBar />\r\n            <Container style={{ marginTop: '7em' }}>\r\n              <Switch>\r\n                <PrivateRoute exact path='/activities' component={ActivityDashboard} />\r\n                <PrivateRoute path='/activities/:id' component={ActivityDetails} />\r\n                <PrivateRoute key={location.key} path={['/createActivity', '/manage/:id']} component={ActivityForm} />\r\n                <PrivateRoute path='/profiles/:username' component={ProfilePage} />\r\n                <PrivateRoute path='/errors' component={TestErrors} />\r\n                <Route path='/server-error' component={ServerError} />\r\n                <Route path='/account/registerSuccess' component={RegisterSuccess} />\r\n                <Route path='/account/verifyEmail' component={ConfirmEmail} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </Container>\r\n          </>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(App);","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import ReactDOM from 'react-dom';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport './app/layout/styles.css';\r\nimport App from './app/layout/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { store, storeContext } from './app/stores/store';\r\nimport { Router } from 'react-router-dom';\r\nimport {createBrowserHistory} from 'history';\r\nimport ScrollToTop from './app/layout/ScrollToTop';\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <storeContext.Provider value= {store}>\r\n    <Router history={history}>\r\n      <ScrollToTop />\r\n      <App />\r\n    </Router>\r\n  </storeContext.Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}